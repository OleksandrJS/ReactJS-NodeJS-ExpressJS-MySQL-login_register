{"version":3,"sources":["hooks/auth.hook.js","components/SigninForm.js","components/RegForm.js","components/AuthLinks.js","Validators/regValidation.js","pages/AuthPage.js","Validators/signinValidation.js","pages/SignInPage.js","pages/UserPage.js","App.js","routes.js","index.js"],"names":["storageName","SigninForm","formLogin","emailOrLogin","password","handleLoginForm","handlerSignin","signInMessage","onSubmit","className","name","onChange","value","placeholder","type","RegForm","formReg","username","email","login","handleChange","checked","handleCheck","birthDate","setBirthDate","handlerRegistration","regMessage","error","success","setDayOfTheBirth","useState","countries","setCountries","useEffect","a","axios","data","map","item","country","fetchData","disabled","selected","sort","i","date","newDate","getDate","getMonth","getFullYear","placeholderText","maxDate","Date","dateFormat","showYearDropdown","yearDropdownItemNumber","scrollableYearDropdown","defaultChecked","AuthLinks","activeClassName","to","exact","regSchema","yup","shape","required","dayOfTheBirth","oneOf","AuthPage","setFormReg","setChecked","setRegMessage","currentTime","timeout","setTimeout","e","preventDefault","formData","isValid","post","timestamp","birth_date","then","response","message","target","prev","signinSchema","SignInPage","useContext","AuthContext","setFormLogin","setSignInMessage","console","log","length","res","UserPage","logout","userEmail","onClick","createContext","App","setUserName","setUserEmail","isAuthenticated","setIsAuthenticated","useCallback","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","useAuth","routes","path","Routes","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eed48508.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nconst storageName = 'userdata';\r\n\r\nexport const useAuth = () => {\r\n  const [username, setUserName] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const login = useCallback((name, email) => {\r\n    setIsAuthenticated(true);\r\n    setUserName(name);\r\n    setUserEmail(email);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        username: name,\r\n        userEmail: email,\r\n        isAuthenticated: true,\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setIsAuthenticated(false);\r\n    setUserName(null);\r\n    setUserEmail(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data) {\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setUserName(data.username);\r\n      setUserEmail(data.userEmail);\r\n    }\r\n  }, [login]);\r\n\r\n  return { login, logout, isAuthenticated, username, userEmail };\r\n};\r\n","/** @format */\r\n\r\nconst SigninForm = ({\r\n  formLogin: { emailOrLogin, password },\r\n  handleLoginForm,\r\n  handlerSignin,\r\n  signInMessage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={handlerSignin} className=\"signin_form\">\r\n        <label>Sign in</label>\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"emailOrLogin\"\r\n          onChange={handleLoginForm}\r\n          value={emailOrLogin}\r\n          placeholder=\"login or email\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={handleLoginForm}\r\n          value={password}\r\n          placeholder=\"password\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\">\r\n          Sign in\r\n        </button>\r\n      </form>\r\n      <p className=\"Error\">{signInMessage}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SigninForm;\r\n","/** @format */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.min.css';\r\n\r\nconst RegForm = ({\r\n  formReg: { username, email, login, password },\r\n  handleChange,\r\n  checked,\r\n  handleCheck,\r\n  birthDate,\r\n  setBirthDate,\r\n  handlerRegistration,\r\n  regMessage: { error, success },\r\n  setDayOfTheBirth,\r\n}) => {\r\n  const [countries, setCountries] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios('http://localhost:5000/countries');\r\n      setCountries(data.map((item) => item.country));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handlerRegistration} className=\"reg_form\">\r\n        <label>Registration</label>\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={email}\r\n          placeholder=\"email\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"login\"\r\n          onChange={handleChange}\r\n          value={login}\r\n          placeholder=\"login\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={password}\r\n          placeholder=\"password\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"username\"\r\n          onChange={handleChange}\r\n          value={username}\r\n          placeholder=\"name\"\r\n        />\r\n        <select onChange={handleChange} name=\"country\">\r\n          <option value=\"0\" disabled selected>\r\n            Select your Country\r\n          </option>\r\n          {countries !== null &&\r\n            countries.sort().map((item, i) => (\r\n              <option value={item} key={i}>\r\n                {item}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <DatePicker\r\n          selected={birthDate}\r\n          onChange={(date) => {\r\n            let newDate =\r\n              date.getDate() +\r\n              '-' +\r\n              (+date.getMonth() + 1) +\r\n              '-' +\r\n              date.getFullYear();\r\n            setBirthDate(date);\r\n            setDayOfTheBirth(newDate);\r\n          }}\r\n          placeholderText=\"Select you birth date\"\r\n          maxDate={new Date()}\r\n          dateFormat=\"dd/MM/yyyy\"\r\n          showYearDropdown\r\n          yearDropdownItemNumber={40}\r\n          scrollableYearDropdown\r\n        />\r\n        <div className=\"terms\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={handleCheck}\r\n            defaultChecked={checked}\r\n          />\r\n          <p>agree with terms and conditions</p>\r\n        </div>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Sign up\r\n        </button>\r\n      </form>\r\n      <p className=\"Error\">{error}</p>\r\n      <p className=\"Success\">{success}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegForm;\r\n","/** @format */\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const AuthLinks = () => {\r\n  return (\r\n    <div className=\"auth-links\">\r\n      <NavLink activeClassName=\"is-active\" to=\"/\" exact>\r\n        Sign Up\r\n      </NavLink>\r\n      <NavLink activeClassName=\"is-active\" to=\"/signIn\">\r\n        Sign In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport * as yup from 'yup';\r\n\r\nexport const regSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  login: yup.string().required(),\r\n  password: yup.string().required(),\r\n  username: yup.string().required(),\r\n  country: yup.string().required(),\r\n  dayOfTheBirth: yup.string().required(),\r\n  checked: yup.bool().oneOf([true], 'Field must be checked').required(),\r\n});\r\n","/** @format */\r\n\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport RegForm from '../components/RegForm';\r\nimport { AuthLinks } from '../components/AuthLinks';\r\nimport { regSchema } from '../Validators/regValidation';\r\n\r\nconst AuthPage = () => {\r\n  const [formReg, setFormReg] = useState({\r\n    email: '',\r\n    login: '',\r\n    password: '',\r\n    username: '',\r\n    country: '',\r\n  });\r\n\r\n  const [birthDate, setBirthDate] = useState('');\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const [regMessage, setRegMessage] = useState({\r\n    error: '',\r\n    success: '',\r\n  });\r\n\r\n  const [dayOfTheBirth, setDayOfTheBirth] = useState('');\r\n\r\n  const handleChangeRegForm = (e) =>\r\n    setFormReg({\r\n      ...formReg,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const handleCheck = () => setChecked((prev) => !prev);\r\n\r\n  const currentTime = +new Date();\r\n\r\n  const timeout = () => {\r\n    setTimeout(\r\n      () =>\r\n        setRegMessage({\r\n          error: '',\r\n          success: '',\r\n        }),\r\n      5000,\r\n    );\r\n  };\r\n\r\n  const handlerRegistration = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { email, login, password, username, country } = formReg;\r\n\r\n    let formData = {\r\n      email,\r\n      login,\r\n      password,\r\n      username,\r\n      country,\r\n      dayOfTheBirth,\r\n      checked,\r\n    };\r\n\r\n    const isValid = await regSchema.isValid(formData);\r\n\r\n    if (isValid) {\r\n      axios\r\n        .post('http://localhost:5000/auth/register', {\r\n          email: formReg.email,\r\n          login: formReg.login,\r\n          password: formReg.password,\r\n          username: formReg.username,\r\n          country: formReg.country,\r\n          timestamp: currentTime,\r\n          birth_date: dayOfTheBirth,\r\n        })\r\n        .then((response) => {\r\n          setRegMessage({\r\n            error: '',\r\n            success: response.data.message,\r\n          });\r\n          timeout();\r\n        });\r\n    } else {\r\n      setRegMessage({\r\n        error: 'All fields must be filled',\r\n        success: '',\r\n      });\r\n      timeout();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthLinks />\r\n      <RegForm\r\n        formReg={formReg}\r\n        birthDate={birthDate}\r\n        setBirthDate={setBirthDate}\r\n        checked={checked}\r\n        handleChange={handleChangeRegForm}\r\n        handleCheck={handleCheck}\r\n        handlerRegistration={handlerRegistration}\r\n        regMessage={regMessage}\r\n        setDayOfTheBirth={setDayOfTheBirth}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","/** @format */\r\n\r\nimport * as yup from 'yup';\r\n\r\nexport const signinSchema = yup.object().shape({\r\n  emailOrLogin: yup.string().required(),\r\n  password: yup.string().required(),\r\n});\r\n","/** @format */\r\n\r\nimport { useState, useContext } from 'react';\r\nimport SigninForm from '../components/SigninForm';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../App';\r\nimport { AuthLinks } from '../components/AuthLinks';\r\nimport { signinSchema } from '../Validators/signinValidation';\r\n\r\nconst SignInPage = () => {\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const [formLogin, setFormLogin] = useState({\r\n    emailOrLogin: '',\r\n    password: '',\r\n  });\r\n\r\n  const [signInMessage, setSignInMessage] = useState('');\r\n\r\n  const handleLoginForm = (e) =>\r\n    setFormLogin({ ...formLogin, [e.target.name]: e.target.value });\r\n\r\n  const timeout = () => {\r\n    setTimeout(() => setSignInMessage(''), 5000);\r\n  };\r\n\r\n  const handlerSignin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { emailOrLogin, password } = formLogin;\r\n\r\n    let formData = {\r\n      emailOrLogin,\r\n      password,\r\n    };\r\n\r\n    const isValid = await signinSchema.isValid(formData);\r\n\r\n    if (isValid) {\r\n      axios\r\n        .post('http://localhost:5000/auth/signin/email', {\r\n          email: formLogin.emailOrLogin,\r\n          password: formLogin.password,\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (response.data.length === 0 || response.data.message) {\r\n            axios\r\n              .post('http://localhost:5000/auth/signin/login', {\r\n                login: formLogin.emailOrLogin,\r\n                password: formLogin.password,\r\n              })\r\n              .then((res) => {\r\n                console.log(res);\r\n                setSignInMessage(res.data.message);\r\n                timeout();\r\n                if (res.data.length !== 0 && !res.data.message) {\r\n                  const data = res.data['0'];\r\n                  const { username, email } = data;\r\n                  login(username, email);\r\n                }\r\n              });\r\n          }\r\n          if (!response.data.message) {\r\n            const data = response.data['0'];\r\n            const { username, email } = data;\r\n            login(username, email);\r\n          }\r\n        });\r\n    } else {\r\n      setSignInMessage('All fields must be filled');\r\n      timeout();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <AuthLinks />\r\n      <SigninForm\r\n        formLogin={formLogin}\r\n        handleLoginForm={handleLoginForm}\r\n        handlerSignin={handlerSignin}\r\n        signInMessage={signInMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","/** @format */\r\nimport { AuthContext } from '../App';\r\nimport { useContext } from 'react';\r\n\r\nconst UserPage = () => {\r\n  const { logout, username, userEmail } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Welcome, {username}</h3>\r\n      <h5>email: {userEmail}</h5>\r\n      <button className=\"btn\" onClick={logout}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","/** @format */\n\nimport { createContext } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useAuth } from './hooks/auth.hook';\nimport { Routes } from './routes';\n\nexport const AuthContext = createContext();\n\nfunction App() {\n  const { login, logout, username, userEmail, isAuthenticated } = useAuth();\n  const routes = Routes(isAuthenticated);\n\n  return (\n    <div className=\"form-wrapper\">\n      <AuthContext.Provider\n        value={{\n          login,\n          logout,\n          username,\n          userEmail,\n        }}>\n        <Router>{routes}</Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/** @format */\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport SigninForm from './components/SigninForm';\r\nimport AuthPage from './pages/AuthPage';\r\nimport SignInPage from './pages/SignInPage';\r\nimport UserPage from './pages/UserPage';\r\n\r\nexport const Routes = (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/user\" exact>\r\n          <UserPage />\r\n        </Route>\r\n        <Redirect to=\"/user\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Route path=\"/signin\">\r\n        <SignInPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}