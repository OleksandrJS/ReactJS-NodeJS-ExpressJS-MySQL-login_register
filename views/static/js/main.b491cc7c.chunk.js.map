{"version":3,"sources":["hooks/auth.hook.js","components/RegForm.js","components/AuthLinks.js","Validators/regValidation.js","pages/RegistrationPage.js","components/SigninForm.js","Validators/signinValidation.js","pages/SignInPage.js","pages/UserPage.js","App.js","routes.js","index.js"],"names":["storageName","RegForm","formReg","username","email","login","password","handleChange","checked","handleCheck","birthDate","setBirthDate","handlerRegistration","regMessage","error","success","useState","countries","setCountries","useEffect","a","axios","data","map","item","country","fetchData","date","Date","onSubmit","className","name","onChange","value","placeholder","type","onClick","e","target","defaultValue","hidden","sort","i","selected","placeholderText","maxDate","setFullYear","getFullYear","dateFormat","showYearDropdown","yearDropdownItemNumber","scrollableYearDropdown","style","cursor","AuthLinks","activeClassName","to","exact","regSchema","yup","shape","required","dayOfTheBirth","default","oneOf","RegistrationPage","setFormReg","setChecked","setRegMessage","currentTime","registrationMessage","setTimeout","preventDefault","formData","isValid","post","timestamp","birth_date","then","response","message","prev","SigninForm","formLogin","emailOrLogin","handleLoginForm","handlerSignin","signInMessage","signinSchema","SignInPage","useContext","AuthContext","setFormLogin","setSignInMessage","timeout","UserPage","logout","userEmail","createContext","App","setUserName","setUserEmail","isAuthenticated","setIsAuthenticated","useCallback","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","useAuth","routes","path","Routes","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b491cc7c.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nconst storageName = 'userdata';\r\n\r\nexport const useAuth = () => {\r\n  const [username, setUserName] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const login = useCallback((name, email) => {\r\n    setIsAuthenticated(true);\r\n    setUserName(name);\r\n    setUserEmail(email);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({\r\n        username: name,\r\n        userEmail: email,\r\n        isAuthenticated: true,\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setIsAuthenticated(false);\r\n    setUserName(null);\r\n    setUserEmail(null);\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n    if (data) {\r\n      setIsAuthenticated(data.isAuthenticated);\r\n      setUserName(data.username);\r\n      setUserEmail(data.userEmail);\r\n    }\r\n  }, [login]);\r\n\r\n  return { login, logout, isAuthenticated, username, userEmail };\r\n};\r\n","/** @format */\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.min.css';\r\n\r\nconst RegForm = ({\r\n  formReg: { username, email, login, password },\r\n  handleChange,\r\n  checked,\r\n  handleCheck,\r\n  birthDate,\r\n  setBirthDate,\r\n  handlerRegistration,\r\n  regMessage: { error, success },\r\n}) => {\r\n  const [countries, setCountries] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios(\r\n        'https://login-mysql-app.herokuapp.com/countries',\r\n      );\r\n      setCountries(data.map((item) => item.country));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSelectClick = (e) => (e.target.className = 'select-active');\r\n\r\n  const date = new Date();\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handlerRegistration} className=\"reg_form\">\r\n        <label>Registration</label>\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"email\"\r\n          onChange={handleChange}\r\n          value={email}\r\n          placeholder=\"email\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"login\"\r\n          onChange={handleChange}\r\n          value={login}\r\n          placeholder=\"login\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={handleChange}\r\n          value={password}\r\n          placeholder=\"password\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"username\"\r\n          onChange={handleChange}\r\n          value={username}\r\n          placeholder=\"name\"\r\n        />\r\n        <select\r\n          onChange={handleChange}\r\n          onClick={handleSelectClick}\r\n          defaultValue=\"\"\r\n          name=\"country\">\r\n          <option hidden value=\"\">\r\n            Select your Country\r\n          </option>\r\n          {countries !== null &&\r\n            countries.sort().map((item, i) => (\r\n              <option value={item} key={i}>\r\n                {item}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <DatePicker\r\n          selected={birthDate}\r\n          onChange={(date) => setBirthDate(date)}\r\n          placeholderText=\"Select you birth date\"\r\n          maxDate={date.setFullYear(date.getFullYear() - 10)}\r\n          dateFormat=\"dd/MM/yyyy\"\r\n          showYearDropdown\r\n          yearDropdownItemNumber={40}\r\n          scrollableYearDropdown\r\n        />\r\n        <div className=\"terms\">\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={handleCheck}\r\n            checked={checked}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n          <p onClick={handleCheck}>agree with terms and conditions</p>\r\n        </div>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Sign up\r\n        </button>\r\n      </form>\r\n      <p className=\"Error\">{error}</p>\r\n      <p className=\"Success\">{success}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegForm;\r\n","/** @format */\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const AuthLinks = () => {\r\n  return (\r\n    <div className=\"auth-links\">\r\n      <NavLink activeClassName=\"is-active\" to=\"/\" exact>\r\n        Sign Up\r\n      </NavLink>\r\n      <NavLink activeClassName=\"is-active\" to=\"/signIn\">\r\n        Sign In\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport * as yup from 'yup';\r\n\r\nexport const regSchema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  login: yup.string().required(),\r\n  password: yup.string().required(),\r\n  username: yup.string().required(),\r\n  country: yup.string().required(),\r\n  dayOfTheBirth: yup\r\n    .date()\r\n    .default(() => new Date())\r\n    .required(),\r\n  checked: yup.bool().oneOf([true]).required(),\r\n});\r\n","/** @format */\r\n\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport RegForm from '../components/RegForm';\r\nimport { AuthLinks } from '../components/AuthLinks';\r\nimport { regSchema } from '../Validators/regValidation';\r\n\r\nconst RegistrationPage = () => {\r\n  const [formReg, setFormReg] = useState({\r\n    email: '',\r\n    login: '',\r\n    password: '',\r\n    username: '',\r\n    country: '',\r\n  });\r\n\r\n  const [birthDate, setBirthDate] = useState('');\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const [regMessage, setRegMessage] = useState({\r\n    error: '',\r\n    success: '',\r\n  });\r\n\r\n  const handleChangeRegForm = (e) =>\r\n    setFormReg({\r\n      ...formReg,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const handleCheck = () => setChecked((prev) => !prev);\r\n\r\n  const currentTime = +new Date();\r\n\r\n  const timeout = () =>\r\n    setTimeout(\r\n      () =>\r\n        setRegMessage({\r\n          error: '',\r\n          success: '',\r\n        }),\r\n      5000,\r\n    );\r\n\r\n  const registrationMessage = (error, success) => {\r\n    setRegMessage({\r\n      error: error,\r\n      success: success,\r\n    });\r\n    timeout();\r\n  };\r\n\r\n  const handlerRegistration = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { email, login, password, username, country } = formReg;\r\n\r\n    let formData = {\r\n      email,\r\n      login,\r\n      password,\r\n      username,\r\n      country,\r\n      birthDate,\r\n      checked,\r\n    };\r\n\r\n    const isValid = await regSchema.isValid(formData);\r\n\r\n    if (isValid && email !== login) {\r\n      axios\r\n        .post('https://login-mysql-app.herokuapp.com/auth/register', {\r\n          email: email,\r\n          login: login,\r\n          password: password,\r\n          username: username,\r\n          country: country,\r\n          timestamp: currentTime,\r\n          birth_date: birthDate,\r\n        })\r\n        .then((response) => {\r\n          registrationMessage(\r\n            response.data.error || '',\r\n            response.data.message || '',\r\n          );\r\n        });\r\n    } else {\r\n      if (email === login && login !== '' && email !== '') {\r\n        registrationMessage('Email and login must be unique', '');\r\n      } else {\r\n        registrationMessage('All fields must be filled', '');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthLinks />\r\n      <RegForm\r\n        formReg={formReg}\r\n        birthDate={birthDate}\r\n        setBirthDate={setBirthDate}\r\n        checked={checked}\r\n        handleChange={handleChangeRegForm}\r\n        handleCheck={handleCheck}\r\n        handlerRegistration={handlerRegistration}\r\n        regMessage={regMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationPage;\r\n","/** @format */\r\n\r\nconst SigninForm = ({\r\n  formLogin: { emailOrLogin, password },\r\n  handleLoginForm,\r\n  handlerSignin,\r\n  signInMessage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form onSubmit={handlerSignin} className=\"signin_form\">\r\n        <label>Sign in</label>\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"emailOrLogin\"\r\n          onChange={handleLoginForm}\r\n          value={emailOrLogin}\r\n          placeholder=\"login or email\"\r\n        />\r\n        <input\r\n          className=\"input-text\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          onChange={handleLoginForm}\r\n          value={password}\r\n          placeholder=\"password\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\">\r\n          Sign in\r\n        </button>\r\n      </form>\r\n      <p className=\"Error\">{signInMessage}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SigninForm;\r\n","/** @format */\r\n\r\nimport * as yup from 'yup';\r\n\r\nexport const signinSchema = yup.object().shape({\r\n  emailOrLogin: yup.string().required(),\r\n  password: yup.string().required(),\r\n});\r\n","/** @format */\r\n\r\nimport { useState, useContext } from 'react';\r\nimport SigninForm from '../components/SigninForm';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../App';\r\nimport { AuthLinks } from '../components/AuthLinks';\r\nimport { signinSchema } from '../Validators/signinValidation';\r\n\r\nconst SignInPage = () => {\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const [formLogin, setFormLogin] = useState({\r\n    emailOrLogin: '',\r\n    password: '',\r\n  });\r\n\r\n  const [signInMessage, setSignInMessage] = useState('');\r\n\r\n  const handleLoginForm = (e) =>\r\n    setFormLogin({ ...formLogin, [e.target.name]: e.target.value });\r\n\r\n  const timeout = () => {\r\n    setTimeout(() => setSignInMessage(''), 5000);\r\n  };\r\n\r\n  const handlerSignin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { emailOrLogin, password } = formLogin;\r\n\r\n    let formData = {\r\n      emailOrLogin,\r\n      password,\r\n    };\r\n\r\n    const isValid = await signinSchema.isValid(formData);\r\n\r\n    if (isValid) {\r\n      axios\r\n        .post('https://login-mysql-app.herokuapp.com/auth/signin', {\r\n          email: emailOrLogin,\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (!response.data.message) {\r\n            const { username, email } = response.data;\r\n            login(username, email);\r\n          } else {\r\n            setSignInMessage(response.data.message);\r\n            timeout();\r\n          }\r\n        });\r\n    } else {\r\n      setSignInMessage('All fields must be filled');\r\n      timeout();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <AuthLinks />\r\n      <SigninForm\r\n        formLogin={formLogin}\r\n        handleLoginForm={handleLoginForm}\r\n        handlerSignin={handlerSignin}\r\n        signInMessage={signInMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n","/** @format */\r\nimport { AuthContext } from '../App';\r\nimport { useContext } from 'react';\r\n\r\nconst UserPage = () => {\r\n  const { logout, username, userEmail } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Welcome, {username}</h3>\r\n      <h5>email: {userEmail}</h5>\r\n      <button className=\"btn\" onClick={logout}>\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","/** @format */\n\nimport { createContext } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useAuth } from './hooks/auth.hook';\nimport { Routes } from './routes';\n\nexport const AuthContext = createContext();\n\nfunction App() {\n  const { login, logout, username, userEmail, isAuthenticated } = useAuth();\n  const routes = Routes(isAuthenticated);\n\n  return (\n    <div className=\"form-wrapper\">\n      <AuthContext.Provider\n        value={{\n          login,\n          logout,\n          username,\n          userEmail,\n        }}>\n        <Router>{routes}</Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/** @format */\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport RegistrationPage from './pages/RegistrationPage';\r\nimport SignInPage from './pages/SignInPage';\r\nimport UserPage from './pages/UserPage';\r\n\r\nexport const Routes = (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/user\" exact>\r\n          <UserPage />\r\n        </Route>\r\n        <Redirect to=\"/user\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <RegistrationPage />\r\n      </Route>\r\n      <Route path=\"/signin\">\r\n        <SignInPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}